{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/danielrico/podcasts/pages/channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport Link from 'next/link';\n\nfunction channel({\n  channel,\n  audioClips,\n  series\n}) {\n  console.log(audioClips);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"jsx-2803455437\",\n      children: \"Podcasts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"jsx-2803455437\",\n      children: channel.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"jsx-2803455437\",\n      children: \"\\xDAltimos podcasts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), audioClips.map(clip => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-2803455437\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"{`/podcast?id=${clip.id}`}\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"jsx-2803455437\",\n            children: clip.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this)\n        }, clip.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"jsx-2803455437\",\n      children: \"Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), series.map(serie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-2803455437\",\n        children: serie.title\n      }, serie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2328664512\",\n      children: \"header.jsx-2803455437{color:#fff;background:#8756ca;padding:15px;text-align:center;}h1.jsx-2803455437{font-weight:600;padding:15px;}.channels.jsx-2803455437{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}.channel.jsx-2803455437{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;}.channel.jsx-2803455437 img.jsx-2803455437{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h2.jsx-2803455437{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-aling:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbHJpY28vcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQmtCLEFBR3dCLEFBTUcsQUFJRCxBQU1DLEFBTUUsQUFLSixXQTFCTyxDQTJCSCxDQWpCRixDQU1JLEVBVlAsRUFnQjJCLFNBWHpCLENBaUJHLENBckJwQixDQU5pQixFQWdCMkIsUUFMb0IsR0FWMUMsQ0EyQlQsU0FDUyxLQVBULEdBcEJiLFFBcUJBLEVBT0EsQ0Fid0Isb0JBQ3hCLE1BTkEiLCJmaWxlIjoiL2hvbWUvZGFuaWVscmljby9wb2RjYXN0cy9wYWdlcy9jaGFubmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuXG5mdW5jdGlvbiBjaGFubmVsKHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzIH0pIHtcbiAgY29uc29sZS5sb2coYXVkaW9DbGlwcylcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGhlYWRlcj5Qb2RjYXN0czwvaGVhZGVyPlxuICAgICAgPGgxPntjaGFubmVsLnRpdGxlfTwvaDE+XG4gICAgICA8aDI+w5psdGltb3MgcG9kY2FzdHM8L2gyPlxuXG4gICAgICB7IGF1ZGlvQ2xpcHMubWFwKChjbGlwKT0+e1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8TGluayBocmVmPSd7YC9wb2RjYXN0P2lkPSR7Y2xpcC5pZH1gfScga2V5PXtjbGlwLmlkfT5cbiAgICAgICAgICAgICAgPGE+XG4gICAgICAgICAgICAgICAgeyBjbGlwLnRpdGxlIH1cbiAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgICB9KSB9XG4gICAgICA8aDI+U2VyaWVzPC9oMj5cbiAgICAgICB7IHNlcmllcy5tYXAoKHNlcmllKT0+e1xuICAgICAgICByZXR1cm4gPGRpdiBrZXk9e3NlcmllLmlkfT57IHNlcmllLnRpdGxlIH08L2Rpdj5cbiAgICAgIH0pIH1cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgaGVhZGVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogIzg3NTZjYTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgaDEge1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgfVxuICAgICAgICAuY2hhbm5lbHMge1xuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgIGdyaWQtZ2FwOiAxNXB4O1xuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcbiAgICAgICAgfVxuICAgICAgICAuY2hhbm5lbCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwwLDAsMC4xNSk7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICAgICAgfVxuICAgICAgICAuY2hhbm5lbCBpbWcge1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgICAgIGgyIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgdGV4dC1hbGluZzogY2VudGVyO1xuICAgICAgICB9XG4gICAgYH08L3N0eWxlPlxuICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAxO1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IHN5c3RlbS11aTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICB9ICAgXG4gICAgYH08L3N0eWxlPlxuICAgIDwvPlxuICApXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJTaWRlUHJvcHMoIHsgcXVlcnkgfSkge1xuXG4gIGNvbnN0IGNoYW5uZWxJZCA9IHF1ZXJ5LmlkXG5cbiAgbGV0IFtyZXFDaGFubmVsLCByZXFTZXJpZXMsIHJlcUF1ZGlvc10gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtjaGFubmVsSWR9YCksXG4gICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtjaGFubmVsSWR9L2NoaWxkX2NoYW5uZWxzYCksXG4gICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtjaGFubmVsSWR9L2F1ZGlvX2NsaXBzYClcbiAgXSlcblxuICBjb25zdCBkYXRhQ2hhbm5lbCA9IGF3YWl0IHJlcUNoYW5uZWwuanNvbigpXG4gIGNvbnN0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWwgXG5cbiAgY29uc3QgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKClcbiAgY29uc3QgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwcyAgXG5cbiAgY29uc3QgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKClcbiAgY29uc3Qgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzXG4gIFxuICAvKlxuICBjb25zdCByZXFDaGFubmVsID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtjaGFubmVsSWR9YClcbiAgY29uc3QgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKVxuICBjb25zdCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsIFxuXG4gIGNvbnN0IHJlcUF1ZGlvcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfS9hdWRpb19jbGlwc2ApXG4gIGNvbnN0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpXG4gIGNvbnN0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHMgIFxuXG4gIGNvbnN0IHJlcVNlcmllcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfS9jaGlsZF9jaGFubmVsc2ApXG4gIGNvbnN0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpXG4gIGNvbnN0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVscyAgXG5cbiAgKi9cblxuICByZXR1cm4geyBwcm9wczogeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMgfSB9O1xufVxuZXhwb3J0IGRlZmF1bHQgY2hhbm5lbFxuIl19 */\\n/*@ sourceURL=/home/danielrico/podcasts/pages/channel.js */\"\n    }, void 0, false, void 0, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2270678436\",\n      children: \"body{margin:1;font-family:system-ui;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbHJpY28vcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RHVCLEFBR3NCLFNBQ2Esc0JBQ0wsaUJBQ3JCIiwiZmlsZSI6Ii9ob21lL2RhbmllbHJpY28vcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcblxuZnVuY3Rpb24gY2hhbm5lbCh7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcyB9KSB7XG4gIGNvbnNvbGUubG9nKGF1ZGlvQ2xpcHMpXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxoZWFkZXI+UG9kY2FzdHM8L2hlYWRlcj5cbiAgICAgIDxoMT57Y2hhbm5lbC50aXRsZX08L2gxPlxuICAgICAgPGgyPsOabHRpbW9zIHBvZGNhc3RzPC9oMj5cblxuICAgICAgeyBhdWRpb0NsaXBzLm1hcCgoY2xpcCk9PntcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPExpbmsgaHJlZj0ne2AvcG9kY2FzdD9pZD0ke2NsaXAuaWR9YH0nIGtleT17Y2xpcC5pZH0+XG4gICAgICAgICAgICAgIDxhPlxuICAgICAgICAgICAgICAgIHsgY2xpcC50aXRsZSB9XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgICAgfSkgfVxuICAgICAgPGgyPlNlcmllczwvaDI+XG4gICAgICAgeyBzZXJpZXMubWFwKChzZXJpZSk9PntcbiAgICAgICAgcmV0dXJuIDxkaXYga2V5PXtzZXJpZS5pZH0+eyBzZXJpZS50aXRsZSB9PC9kaXY+XG4gICAgICB9KSB9XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGhlYWRlciB7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICM4NzU2Y2E7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIGgxIHtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIH1cbiAgICAgICAgLmNoYW5uZWxzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICBncmlkLWdhcDogMTVweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgxNjBweCwgMWZyKSk7XG4gICAgICAgIH1cbiAgICAgICAgLmNoYW5uZWwge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICAgIH1cbiAgICAgICAgLmNoYW5uZWwgaW1nIHtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggcmdiYSgwLDAsMCwwLjE1KTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgICBoMiB7XG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIHRleHQtYWxpbmc6IGNlbnRlcjtcbiAgICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICBib2R5IHtcbiAgICAgICAgICAgIG1hcmdpbjogMTtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBzeXN0ZW0tdWk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgfSAgIFxuICAgIGB9PC9zdHlsZT5cbiAgICA8Lz5cbiAgKVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKCB7IHF1ZXJ5IH0pIHtcblxuICBjb25zdCBjaGFubmVsSWQgPSBxdWVyeS5pZFxuXG4gIGxldCBbcmVxQ2hhbm5lbCwgcmVxU2VyaWVzLCByZXFBdWRpb3NdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfWApLFxuICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfS9jaGlsZF9jaGFubmVsc2ApLFxuICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfS9hdWRpb19jbGlwc2ApXG4gIF0pXG5cbiAgY29uc3QgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKVxuICBjb25zdCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsIFxuXG4gIGNvbnN0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpXG4gIGNvbnN0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHMgIFxuXG4gIGNvbnN0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpXG4gIGNvbnN0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVsc1xuICBcbiAgLypcbiAgY29uc3QgcmVxQ2hhbm5lbCA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfWApXG4gIGNvbnN0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKClcbiAgY29uc3QgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbCBcblxuICBjb25zdCByZXFBdWRpb3MgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH0vYXVkaW9fY2xpcHNgKVxuICBjb25zdCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKVxuICBjb25zdCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvcy5ib2R5LmF1ZGlvX2NsaXBzICBcblxuICBjb25zdCByZXFTZXJpZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH0vY2hpbGRfY2hhbm5lbHNgKVxuICBjb25zdCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKVxuICBjb25zdCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHMgIFxuXG4gICovXG5cbiAgcmV0dXJuIHsgcHJvcHM6IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzIH0gfTtcbn1cbmV4cG9ydCBkZWZhdWx0IGNoYW5uZWxcbiJdfQ== */\\n/*@ sourceURL=/home/danielrico/podcasts/pages/channel.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true);\n}\n\nexport async function getServerSideProps({\n  query\n}) {\n  const channelId = query.id;\n  let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${channelId}`), fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`), fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)]);\n  const dataChannel = await reqChannel.json();\n  const channel = dataChannel.body.channel;\n  const dataAudios = await reqAudios.json();\n  const audioClips = dataAudios.body.audio_clips;\n  const dataSeries = await reqSeries.json();\n  const series = dataSeries.body.channels;\n  /*\n  const reqChannel = await fetch(`https://api.audioboom.com/channels/${channelId}`)\n  const dataChannel = await reqChannel.json()\n  const channel = dataChannel.body.channel \n   const reqAudios = await fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)\n  const dataAudios = await reqAudios.json()\n  const audioClips = dataAudios.body.audio_clips  \n   const reqSeries = await fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`)\n  const dataSeries = await reqSeries.json()\n  const series = dataSeries.body.channels  \n   */\n\n  return {\n    props: {\n      channel,\n      audioClips,\n      series\n    }\n  };\n}\nexport default channel;","map":{"version":3,"sources":["/home/danielrico/podcasts/pages/channel.js"],"names":["React","Link","channel","audioClips","series","console","log","title","map","clip","id","serie","getServerSideProps","query","channelId","reqChannel","reqSeries","reqAudios","Promise","all","fetch","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","props"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,OAAT,CAAiB;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAjB,EAAkD;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA,gBAAKD,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAKIJ,UAAU,CAACK,GAAX,CAAgBC,IAAD,IAAQ;AACvB,0BACE;AAAA;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,4BAAX;AAAA,iCACE;AAAA;AAAA,sBACIA,IAAI,CAACF;AADT;AAAA;AAAA;AAAA;AAAA;AADF,WAA6CE,IAAI,CAACC,EAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVC,CALJ,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,EAiBKN,MAAM,CAACI,GAAP,CAAYG,KAAD,IAAS;AACrB,0BAAO;AAAA;AAAA,kBAAsBA,KAAK,CAACJ;AAA5B,SAAUI,KAAK,CAACD,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFE,CAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAkED;;AAED,OAAO,eAAeE,kBAAf,CAAmC;AAAEC,EAAAA;AAAF,CAAnC,EAA8C;AAEnD,QAAMC,SAAS,GAAGD,KAAK,CAACH,EAAxB;AAEA,MAAI,CAACK,UAAD,EAAaC,SAAb,EAAwBC,SAAxB,IAAqC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACzDC,KAAK,CAAE,sCAAqCN,SAAU,EAAjD,CADoD,EAEzDM,KAAK,CAAE,sCAAqCN,SAAU,iBAAjD,CAFoD,EAGzDM,KAAK,CAAE,sCAAqCN,SAAU,cAAjD,CAHoD,CAAZ,CAA/C;AAMA,QAAMO,WAAW,GAAG,MAAMN,UAAU,CAACO,IAAX,EAA1B;AACA,QAAMpB,OAAO,GAAGmB,WAAW,CAACE,IAAZ,CAAiBrB,OAAjC;AAEA,QAAMsB,UAAU,GAAG,MAAMP,SAAS,CAACK,IAAV,EAAzB;AACA,QAAMnB,UAAU,GAAGqB,UAAU,CAACD,IAAX,CAAgBE,WAAnC;AAEA,QAAMC,UAAU,GAAG,MAAMV,SAAS,CAACM,IAAV,EAAzB;AACA,QAAMlB,MAAM,GAAGsB,UAAU,CAACH,IAAX,CAAgBI,QAA/B;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKE,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAE1B,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA;AAAvB;AAAT,GAAP;AACD;AACD,eAAeF,OAAf","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\n\nfunction channel({ channel, audioClips, series }) {\n  console.log(audioClips)\n  return (\n    <>\n      <header>Podcasts</header>\n      <h1>{channel.title}</h1>\n      <h2>Últimos podcasts</h2>\n\n      { audioClips.map((clip)=>{\n        return (\n          <div>\n            <Link href='{`/podcast?id=${clip.id}`}' key={clip.id}>\n              <a>\n                { clip.title }\n              </a>\n            </Link>\n          </div>\n        )\n      }) }\n      <h2>Series</h2>\n       { series.map((serie)=>{\n        return <div key={serie.id}>{ serie.title }</div>\n      }) }\n      <style jsx>{`\n        header {\n            color: #fff;\n            background: #8756ca;\n            padding: 15px;\n            text-align: center;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n        .channels {\n            display: grid;\n            grid-gap: 15px;\n            padding: 15px;\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n        }\n        .channel {\n            display: block;\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n            margin-bottom: 0.5em;\n        }\n        .channel img {\n          border-radius: 3px;\n          box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n          width: 100%;\n        }\n        h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-aling: center;\n        }\n    `}</style>\n    <style jsx global>{`\n        body {\n            margin: 1;\n            font-family: system-ui;\n            background: white;\n        }   \n    `}</style>\n    </>\n  )\n}\n\nexport async function getServerSideProps( { query }) {\n\n  const channelId = query.id\n\n  let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n    fetch(`https://api.audioboom.com/channels/${channelId}`),\n    fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`),\n    fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)\n  ])\n\n  const dataChannel = await reqChannel.json()\n  const channel = dataChannel.body.channel \n\n  const dataAudios = await reqAudios.json()\n  const audioClips = dataAudios.body.audio_clips  \n\n  const dataSeries = await reqSeries.json()\n  const series = dataSeries.body.channels\n  \n  /*\n  const reqChannel = await fetch(`https://api.audioboom.com/channels/${channelId}`)\n  const dataChannel = await reqChannel.json()\n  const channel = dataChannel.body.channel \n\n  const reqAudios = await fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)\n  const dataAudios = await reqAudios.json()\n  const audioClips = dataAudios.body.audio_clips  \n\n  const reqSeries = await fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`)\n  const dataSeries = await reqSeries.json()\n  const series = dataSeries.body.channels  \n\n  */\n\n  return { props: { channel, audioClips, series } };\n}\nexport default channel\n"]},"metadata":{},"sourceType":"module"}