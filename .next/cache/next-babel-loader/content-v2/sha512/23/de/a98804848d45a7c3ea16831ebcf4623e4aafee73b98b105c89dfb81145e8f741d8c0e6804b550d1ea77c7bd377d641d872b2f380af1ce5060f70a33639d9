{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/danielrico/podcasts/pages/channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport Link from 'next/link';\n\nfunction channel(_ref) {\n  var _this = this;\n\n  var channel = _ref.channel,\n      audioClips = _ref.audioClips,\n      series = _ref.series;\n  console.log(audioClips);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"jsx-2803455437\",\n      children: \"Podcasts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"jsx-2803455437\",\n      children: channel.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"jsx-2803455437\",\n      children: \"\\xDAltimos podcasts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), audioClips.map(function (clip) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-2803455437\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/podcast?id=\".concat(clip.id),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"jsx-2803455437\",\n            children: clip.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, _this)\n        }, clip.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"jsx-2803455437\",\n      children: \"Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), series.map(function (serie) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-2803455437\",\n        children: serie.title\n      }, serie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2328664512\",\n      children: \"header.jsx-2803455437{color:#fff;background:#8756ca;padding:15px;text-align:center;}h1.jsx-2803455437{font-weight:600;padding:15px;}.channels.jsx-2803455437{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}.channel.jsx-2803455437{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;}.channel.jsx-2803455437 img.jsx-2803455437{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h2.jsx-2803455437{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-aling:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbHJpY28vcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQmtCLEFBR3dCLEFBTUcsQUFJRCxBQU1DLEFBTUUsQUFLSixXQTFCTyxDQTJCSCxDQWpCRixDQU1JLEVBVlAsRUFnQjJCLFNBWHpCLENBaUJHLENBckJwQixDQU5pQixFQWdCMkIsUUFMb0IsR0FWMUMsQ0EyQlQsU0FDUyxLQVBULEdBcEJiLFFBcUJBLEVBT0EsQ0Fid0Isb0JBQ3hCLE1BTkEiLCJmaWxlIjoiL2hvbWUvZGFuaWVscmljby9wb2RjYXN0cy9wYWdlcy9jaGFubmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuXG5mdW5jdGlvbiBjaGFubmVsKHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzIH0pIHtcbiAgY29uc29sZS5sb2coYXVkaW9DbGlwcylcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGhlYWRlcj5Qb2RjYXN0czwvaGVhZGVyPlxuICAgICAgPGgxPntjaGFubmVsLnRpdGxlfTwvaDE+XG4gICAgICA8aDI+w5psdGltb3MgcG9kY2FzdHM8L2gyPlxuXG4gICAgICB7IGF1ZGlvQ2xpcHMubWFwKChjbGlwKT0+e1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8TGluayBocmVmPXtgL3BvZGNhc3Q/aWQ9JHtjbGlwLmlkfWB9IGtleT17Y2xpcC5pZH0+XG4gICAgICAgICAgICAgIDxhPlxuICAgICAgICAgICAgICAgIHsgY2xpcC50aXRsZSB9XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgICAgfSkgfVxuICAgICAgPGgyPlNlcmllczwvaDI+XG4gICAgICAgeyBzZXJpZXMubWFwKChzZXJpZSk9PntcbiAgICAgICAgcmV0dXJuIDxkaXYga2V5PXtzZXJpZS5pZH0+eyBzZXJpZS50aXRsZSB9PC9kaXY+XG4gICAgICB9KSB9XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGhlYWRlciB7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICM4NzU2Y2E7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIGgxIHtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIH1cbiAgICAgICAgLmNoYW5uZWxzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICBncmlkLWdhcDogMTVweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgxNjBweCwgMWZyKSk7XG4gICAgICAgIH1cbiAgICAgICAgLmNoYW5uZWwge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICAgIH1cbiAgICAgICAgLmNoYW5uZWwgaW1nIHtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggcmdiYSgwLDAsMCwwLjE1KTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgICBoMiB7XG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIHRleHQtYWxpbmc6IGNlbnRlcjtcbiAgICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICBib2R5IHtcbiAgICAgICAgICAgIG1hcmdpbjogMTtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBzeXN0ZW0tdWk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgfSAgIFxuICAgIGB9PC9zdHlsZT5cbiAgICA8Lz5cbiAgKVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKCB7IHF1ZXJ5IH0pIHtcblxuICBjb25zdCBjaGFubmVsSWQgPSBxdWVyeS5pZFxuXG4gIGxldCBbcmVxQ2hhbm5lbCwgcmVxU2VyaWVzLCByZXFBdWRpb3NdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfWApLFxuICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfS9jaGlsZF9jaGFubmVsc2ApLFxuICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfS9hdWRpb19jbGlwc2ApXG4gIF0pXG5cbiAgY29uc3QgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKVxuICBjb25zdCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsIFxuXG4gIGNvbnN0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpXG4gIGNvbnN0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHMgIFxuXG4gIGNvbnN0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpXG4gIGNvbnN0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVsc1xuICBcbiAgLypcbiAgY29uc3QgcmVxQ2hhbm5lbCA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfWApXG4gIGNvbnN0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKClcbiAgY29uc3QgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbCBcblxuICBjb25zdCByZXFBdWRpb3MgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH0vYXVkaW9fY2xpcHNgKVxuICBjb25zdCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKVxuICBjb25zdCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvcy5ib2R5LmF1ZGlvX2NsaXBzICBcblxuICBjb25zdCByZXFTZXJpZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH0vY2hpbGRfY2hhbm5lbHNgKVxuICBjb25zdCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKVxuICBjb25zdCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHMgIFxuXG4gICovXG5cbiAgcmV0dXJuIHsgcHJvcHM6IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzIH0gfTtcbn1cbmV4cG9ydCBkZWZhdWx0IGNoYW5uZWxcbiJdfQ== */\\n/*@ sourceURL=/home/danielrico/podcasts/pages/channel.js */\"\n    }, void 0, false, void 0, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2270678436\",\n      children: \"body{margin:1;font-family:system-ui;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbHJpY28vcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RHVCLEFBR3NCLFNBQ2Esc0JBQ0wsaUJBQ3JCIiwiZmlsZSI6Ii9ob21lL2RhbmllbHJpY28vcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcblxuZnVuY3Rpb24gY2hhbm5lbCh7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcyB9KSB7XG4gIGNvbnNvbGUubG9nKGF1ZGlvQ2xpcHMpXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxoZWFkZXI+UG9kY2FzdHM8L2hlYWRlcj5cbiAgICAgIDxoMT57Y2hhbm5lbC50aXRsZX08L2gxPlxuICAgICAgPGgyPsOabHRpbW9zIHBvZGNhc3RzPC9oMj5cblxuICAgICAgeyBhdWRpb0NsaXBzLm1hcCgoY2xpcCk9PntcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPExpbmsgaHJlZj17YC9wb2RjYXN0P2lkPSR7Y2xpcC5pZH1gfSBrZXk9e2NsaXAuaWR9PlxuICAgICAgICAgICAgICA8YT5cbiAgICAgICAgICAgICAgICB7IGNsaXAudGl0bGUgfVxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICAgIH0pIH1cbiAgICAgIDxoMj5TZXJpZXM8L2gyPlxuICAgICAgIHsgc2VyaWVzLm1hcCgoc2VyaWUpPT57XG4gICAgICAgIHJldHVybiA8ZGl2IGtleT17c2VyaWUuaWR9Pnsgc2VyaWUudGl0bGUgfTwvZGl2PlxuICAgICAgfSkgfVxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBoZWFkZXIge1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjODc1NmNhO1xuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICBoMSB7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICB9XG4gICAgICAgIC5jaGFubmVscyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTYwcHgsIDFmcikpO1xuICAgICAgICB9XG4gICAgICAgIC5jaGFubmVsIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggcmdiYSgwLDAsMCwwLjE1KTtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgICAgICB9XG4gICAgICAgIC5jaGFubmVsIGltZyB7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwwLDAsMC4xNSk7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgaDIge1xuICAgICAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAwLjllbTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB0ZXh0LWFsaW5nOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICBgfTwvc3R5bGU+XG4gICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgYm9keSB7XG4gICAgICAgICAgICBtYXJnaW46IDE7XG4gICAgICAgICAgICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgIH0gICBcbiAgICBgfTwvc3R5bGU+XG4gICAgPC8+XG4gIClcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlclNpZGVQcm9wcyggeyBxdWVyeSB9KSB7XG5cbiAgY29uc3QgY2hhbm5lbElkID0gcXVlcnkuaWRcblxuICBsZXQgW3JlcUNoYW5uZWwsIHJlcVNlcmllcywgcmVxQXVkaW9zXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH1gKSxcbiAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH0vY2hpbGRfY2hhbm5lbHNgKSxcbiAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH0vYXVkaW9fY2xpcHNgKVxuICBdKVxuXG4gIGNvbnN0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKClcbiAgY29uc3QgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbCBcblxuICBjb25zdCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKVxuICBjb25zdCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvcy5ib2R5LmF1ZGlvX2NsaXBzICBcblxuICBjb25zdCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKVxuICBjb25zdCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHNcbiAgXG4gIC8qXG4gIGNvbnN0IHJlcUNoYW5uZWwgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH1gKVxuICBjb25zdCBkYXRhQ2hhbm5lbCA9IGF3YWl0IHJlcUNoYW5uZWwuanNvbigpXG4gIGNvbnN0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWwgXG5cbiAgY29uc3QgcmVxQXVkaW9zID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtjaGFubmVsSWR9L2F1ZGlvX2NsaXBzYClcbiAgY29uc3QgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKClcbiAgY29uc3QgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwcyAgXG5cbiAgY29uc3QgcmVxU2VyaWVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtjaGFubmVsSWR9L2NoaWxkX2NoYW5uZWxzYClcbiAgY29uc3QgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKClcbiAgY29uc3Qgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzICBcblxuICAqL1xuXG4gIHJldHVybiB7IHByb3BzOiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcyB9IH07XG59XG5leHBvcnQgZGVmYXVsdCBjaGFubmVsXG4iXX0= */\\n/*@ sourceURL=/home/danielrico/podcasts/pages/channel.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true);\n}\n\nexport var __N_SSP = true;\nexport default channel;","map":{"version":3,"sources":["/home/danielrico/podcasts/pages/channel.js"],"names":["React","Link","channel","audioClips","series","console","log","title","map","clip","id","serie"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,OAAT,OAAkD;AAAA;;AAAA,MAA/BA,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,UAAsB,QAAtBA,UAAsB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA,gBAAKD,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAKIJ,UAAU,CAACK,GAAX,CAAe,UAACC,IAAD,EAAQ;AACvB,0BACE;AAAA;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,wBAAiBA,IAAI,CAACC,EAAtB,CAAV;AAAA,iCACE;AAAA;AAAA,sBACID,IAAI,CAACF;AADT;AAAA;AAAA;AAAA;AAAA;AADF,WAA2CE,IAAI,CAACC,EAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF;AASD,KAVC,CALJ,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,EAiBKN,MAAM,CAACI,GAAP,CAAW,UAACG,KAAD,EAAS;AACrB,0BAAO;AAAA;AAAA,kBAAsBA,KAAK,CAACJ;AAA5B,SAAUI,KAAK,CAACD,EAAhB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFE,CAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAkED;;;AAsCD,eAAeR,OAAf","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\n\nfunction channel({ channel, audioClips, series }) {\n  console.log(audioClips)\n  return (\n    <>\n      <header>Podcasts</header>\n      <h1>{channel.title}</h1>\n      <h2>Últimos podcasts</h2>\n\n      { audioClips.map((clip)=>{\n        return (\n          <div>\n            <Link href={`/podcast?id=${clip.id}`} key={clip.id}>\n              <a>\n                { clip.title }\n              </a>\n            </Link>\n          </div>\n        )\n      }) }\n      <h2>Series</h2>\n       { series.map((serie)=>{\n        return <div key={serie.id}>{ serie.title }</div>\n      }) }\n      <style jsx>{`\n        header {\n            color: #fff;\n            background: #8756ca;\n            padding: 15px;\n            text-align: center;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n        .channels {\n            display: grid;\n            grid-gap: 15px;\n            padding: 15px;\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n        }\n        .channel {\n            display: block;\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n            margin-bottom: 0.5em;\n        }\n        .channel img {\n          border-radius: 3px;\n          box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n          width: 100%;\n        }\n        h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-aling: center;\n        }\n    `}</style>\n    <style jsx global>{`\n        body {\n            margin: 1;\n            font-family: system-ui;\n            background: white;\n        }   \n    `}</style>\n    </>\n  )\n}\n\nexport async function getServerSideProps( { query }) {\n\n  const channelId = query.id\n\n  let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n    fetch(`https://api.audioboom.com/channels/${channelId}`),\n    fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`),\n    fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)\n  ])\n\n  const dataChannel = await reqChannel.json()\n  const channel = dataChannel.body.channel \n\n  const dataAudios = await reqAudios.json()\n  const audioClips = dataAudios.body.audio_clips  \n\n  const dataSeries = await reqSeries.json()\n  const series = dataSeries.body.channels\n  \n  /*\n  const reqChannel = await fetch(`https://api.audioboom.com/channels/${channelId}`)\n  const dataChannel = await reqChannel.json()\n  const channel = dataChannel.body.channel \n\n  const reqAudios = await fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)\n  const dataAudios = await reqAudios.json()\n  const audioClips = dataAudios.body.audio_clips  \n\n  const reqSeries = await fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`)\n  const dataSeries = await reqSeries.json()\n  const series = dataSeries.body.channels  \n\n  */\n\n  return { props: { channel, audioClips, series } };\n}\nexport default channel\n"]},"metadata":{},"sourceType":"module"}