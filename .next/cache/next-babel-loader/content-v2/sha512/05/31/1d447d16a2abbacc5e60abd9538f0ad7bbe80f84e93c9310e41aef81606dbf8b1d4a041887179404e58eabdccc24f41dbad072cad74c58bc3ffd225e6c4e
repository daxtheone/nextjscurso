{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daxtheone/proyectos/nextjscurso/pages/index.js\";\nimport React from \"react\";\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from 'next/error';\n\nfunction index(_ref) {\n  var channels = _ref.channels,\n      statusCode = _ref.statusCode;\n\n  if (statusCode !== 200) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      statusCode: statusCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"App de Podcasts de platzi\",\n      children: /*#__PURE__*/_jsxDEV(ChannelGrid, {\n        channels: channels\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\nexport var __N_SSP = true;\nexport default index;","map":{"version":3,"sources":["/home/daxtheone/proyectos/nextjscurso/pages/index.js"],"names":["React","Layout","ChannelGrid","Error","index","channels","statusCode"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,SAASC,KAAT,OAAuC;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AACnC,MAAKA,UAAU,KAAK,GAApB,EAAyB;AACrB,wBAAO,QAAC,KAAD;AAAO,MAAA,UAAU,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,2BACA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,2BAAd;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAKD;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAOH;;;AAYD,eAAeD,KAAf","sourcesContent":["import React from \"react\"\nimport 'isomorphic-fetch'\nimport Layout from '../components/Layout'\nimport ChannelGrid from '../components/ChannelGrid'\nimport Error from 'next/error'\n\nfunction index({channels, statusCode}) {  \n    if ( statusCode !== 200 ){\n        return <Error statusCode={statusCode} /> \n    }\n    return (\n        <>\n        <Layout title='App de Podcasts de platzi'>\n            <ChannelGrid channels = { channels } />\n        </Layout>\n        </>\n    )\n}\n\nexport async function getServerSideProps() {\n    try {\n        const req = await fetch('https://api.audioboom.com/channels/recommendedd')\n        const { body: channels } = await req.json()\n        return { props: { channels, statusCode : 200 } }\n    } catch (e) {\n        return { props: { channels: null, statusCode: 503 } }\n    }\n    \n}\nexport default index\n"]},"metadata":{},"sourceType":"module"}